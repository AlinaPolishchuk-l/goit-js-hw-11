{"version":3,"mappings":";6vBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAOC,EAAO,EAAGC,EAAU,GAAI,CAC/D,MAAMC,EAAS,CACb,IAAKN,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAUE,EACV,KAAMD,CACP,EAED,GAAI,CAEF,OADiB,MAAMG,EAAM,IAAIN,EAAU,CAAE,OAAAK,EAAQ,GACrC,IACjB,OAAQE,EAAO,CACd,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACV,CACA,+/BCpBA,IAAIC,EAEG,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAG7CC,EAASF,EAAO,IAAI,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA,aAC3FL,CAAa;AAAA;AAAA,kBAERD,CAAY,UAAUE,CAAI;AAAA;AAAA,6CAECC,CAAK;AAAA,6CACLC,CAAK;AAAA,gDACFC,CAAQ;AAAA,iDACPC,CAAS;AAAA;AAAA;AAAA;AAAA,CAIzD,EAAE,KAAK,EAAE,EAERR,EAAQ,mBAAmB,YAAaC,CAAM,EAEzCJ,EAGHA,EAAS,QAAS,EAFlBA,EAAW,IAAIY,EAAe,aAAc,CAAE,aAAc,MAAO,aAAc,IAAK,CAI1F,CAEO,SAASC,GAAe,CAC7B,MAAMV,EAAU,SAAS,cAAc,UAAU,EACjDA,EAAQ,UAAY,EACtB,CAEO,SAASW,GAAa,CACZ,SAAS,cAAc,SAAS,EACxC,UAAU,OAAO,QAAQ,CAClC,CAEO,SAASC,GAAa,CACZ,SAAS,cAAc,SAAS,EACxC,UAAU,IAAI,QAAQ,CAC/B,CAEO,SAASC,GAAuB,OACrC,OAAO,6BAAU,OAAAC,KAAA,GAAC,wBAAC,KAAMC,GAAa,CACpCA,EAAS,KAAK,CACZ,MAAO,aACP,QAAS,2DACT,SAAU,UAChB,CAAK,CACL,CAAG,CACH,CAEO,SAASC,GAAmB,OACjC,OAAO,6BAAU,OAAAF,KAAA,GAAC,wBAAC,KAAMC,GAAa,CACpCA,EAAS,MAAM,CACb,MAAO,QACP,QAAS,gDACT,SAAU,UAChB,CAAK,CACL,CAAG,CACH,CCnDA,MAAME,EAAO,SAAS,cAAc,cAAc,EAClC,SAAS,cAAc,UAAU,EACjD,IAAIC,EAAc,EACdC,EAAe,GAEnBF,EAAK,iBAAiB,SAAUG,CAAQ,EAExC,eAAeA,EAASC,EAAO,CAC7BA,EAAM,eAAgB,EAEtB,MAAM9B,EAAQ8B,EAAM,OAAO,SAAS,MAAM,MAAM,KAAM,EAEtD,GAAI,GAAC9B,GAASA,IAAU4B,GAIxB,CAAAA,EAAe5B,EACf2B,EAAc,EACdR,EAAc,EACdC,EAAY,EAEZ,GAAI,CACF,MAAMW,EAAO,MAAMhC,EAAY6B,EAAcD,CAAW,EAExD,GAAII,EAAK,KAAK,SAAW,EAAG,CAC1BT,EAAsB,EACtB,MACN,CAEIf,EAAcwB,EAAK,IAAI,CACxB,MAAe,CACdN,EAAkB,CACtB,QAAY,CACRJ,EAAY,CAChB,EACA,CAEA,OAAO,iBAAiB,SAAUW,CAAQ,EAE1C,eAAeA,GAAW,CACxB,GAAI,OAAO,YAAc,OAAO,SAAW,SAAS,KAAK,aAAe,IAAK,CAC3EL,GAAe,EAEfP,EAAY,EAEZ,GAAI,CACF,MAAMW,EAAO,MAAMhC,EAAY6B,EAAcD,CAAW,EAExD,GAAII,EAAK,KAAK,SAAW,EAAG,CAC1BT,EAAsB,EACtB,MACR,CAEMf,EAAcwB,EAAK,IAAI,CACxB,MAAe,CACdN,EAAkB,CACxB,QAAc,CACRJ,EAAY,CAClB,CACA,CACA","names":["API_KEY","BASE_URL","fetchImages","query","page","perPage","params","axios","error","lightbox","renderGallery","images","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","clearGallery","showLoader","hideLoader","showNoResultsMessage","n","iziToast","showErrorMessage","form","currentPage","currentQuery","onSearch","event","data","onScroll"],"ignoreList":[],"sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '47380023-0cf9eda8f68e611c05b08262c';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query, page = 1, perPage = 12) {\n  const params = {\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n    per_page: perPage,\n    page: page,\n  };\n\n  try {\n    const response = await axios.get(BASE_URL, { params });\n    return response.data; \n  } catch (error) {\n    console.error('Error fetching images:', error);\n    throw error;\n  }\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nlet lightbox; \n\nexport function renderGallery(images) {\n  const gallery = document.querySelector('.gallery');\n\n\nconst markup = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n  <a href=\"${largeImageURL}\" class=\"gallery-item\">\n    <div class=\"photo-card\">\n      <img src=\"${webformatURL}\" alt=\"${tags}\" />\n      <div class=\"info\">\n        <div class=\"item\"><h3>Likes</h3><p>${likes}</p></div>\n        <div class=\"item\"><h3>Views</h3><p>${views}</p></div>\n        <div class=\"item\"><h3>Comments</h3><p>${comments}</p></div>\n        <div class=\"item\"><h3>Downloads</h3><p>${downloads}</p></div>\n      </div>\n    </div>\n  </a>\n`).join('');\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n\n  if (!lightbox) {\n    lightbox = new SimpleLightbox('.gallery a', { captionsData: 'alt', captionDelay: 250 });\n  } else {\n    lightbox.refresh();\n  }\n}\n\nexport function clearGallery() {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = '';\n}\n\nexport function showLoader() {\n  const loader = document.querySelector('#loader');\n  loader.classList.remove('hidden');\n}\n\nexport function hideLoader() {\n  const loader = document.querySelector('#loader');\n  loader.classList.add('hidden');\n}\n\nexport function showNoResultsMessage() {\n  import('izitoast').then((iziToast) => {\n    iziToast.info({\n      title: 'No Results',\n      message: 'No images found for your search query. Please try again.',\n      position: 'topRight',\n    });\n  });\n}\n\nexport function showErrorMessage() {\n  import('izitoast').then((iziToast) => {\n    iziToast.error({\n      title: 'Error',\n      message: 'Something went wrong. Please try again later.',\n      position: 'topRight',\n    });\n  });\n}\n","\n\nimport { fetchImages } from './js/pixabay-api';\nimport {\n  renderGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n  showNoResultsMessage,\n  showErrorMessage,\n} from './js/render-functions';\n\n\n\nconst form = document.querySelector('#search-form');\nconst gallery = document.querySelector('.gallery');\nlet currentPage = 1;\nlet currentQuery = '';\n\nform.addEventListener('submit', onSearch);\n\nasync function onSearch(event) {\n  event.preventDefault();\n\n  const query = event.target.elements.query.value.trim();\n\n  if (!query || query === currentQuery) {\n    return;\n  }\n\n  currentQuery = query;\n  currentPage = 1;\n  clearGallery();\n  showLoader();\n\n  try {\n    const data = await fetchImages(currentQuery, currentPage);\n\n    if (data.hits.length === 0) {\n      showNoResultsMessage();\n      return;\n    }\n\n    renderGallery(data.hits);\n  } catch (error) {\n    showErrorMessage();\n  } finally {\n    hideLoader();\n  }\n}\n\nwindow.addEventListener('scroll', onScroll);\n\nasync function onScroll() {\n  if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 200) {\n    currentPage += 1;\n\n    showLoader();\n\n    try {\n      const data = await fetchImages(currentQuery, currentPage);\n\n      if (data.hits.length === 0) {\n        showNoResultsMessage();\n        return;\n      }\n\n      renderGallery(data.hits);\n    } catch (error) {\n      showErrorMessage();\n    } finally {\n      hideLoader();\n    }\n  }\n}\n"],"file":"index.js"}